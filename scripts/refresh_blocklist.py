"""Download the latest disposable email domains and update blocklist.txt."""

from __future__ import annotations

import asyncio
import pathlib

import httpx

SOURCE_URL = "https://raw.githubusercontent.com/disposable/disposable-email-domains/master/domains.txt"
TARGET_PATH = pathlib.Path(__file__).resolve().parent.parent / "blocklist.txt"


async def fetch_domains() -> list[str]:
    async with httpx.AsyncClient(timeout=10.0) as client:
        response = await client.get(SOURCE_URL)
        response.raise_for_status()
        domains = []
        for line in response.text.splitlines():
            line = line.strip()
            if line and not line.startswith("#"):
                domains.append(line.lower())
        return sorted(set(domains))


async def main() -> None:
    domains = await fetch_domains()
    header = "# Auto-generated by scripts/refresh_blocklist.py\n"
    TARGET_PATH.write_text(header + "\n".join(domains) + "\n", encoding="utf-8")
    print(f"Wrote {len(domains)} domains to {TARGET_PATH}")


if __name__ == "__main__":
    asyncio.run(main())
